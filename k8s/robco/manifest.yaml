apiVersion: v1
kind: Namespace
metadata:
  name: robco
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: robot-service
  name: robot-service
  namespace: robco
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: robot-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: robot-service
    spec:
      containers:
      - image: robco/robot-service:latest
        imagePullPolicy: IfNotPresent
        name: robot-service
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 0.25Gi
        ports:
        - containerPort: 80
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
        - name: DATABASE_URL
          value: postgresql+asyncpg://robotuser:password@postgres-db:5432/robotdb
        - name: FRONTEND_ORIGIN
          value: "http://robot-dashboard.local"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: robot-service
  namespace: robco
spec:
  selector:
    app: robot-service
  type: NodePort
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: robot-service
  namespace: robco
spec:
  ingressClassName: nginx
  rules:
  - host: robot-service.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: robot-service
            port:
              number: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: robot-dashboard
  name: robot-dashboard
  namespace: robco
spec:
  replicas: 1
  selector:
    matchLabels:
      app: robot-dashboard
  template:
    metadata:
      labels:
        app: robot-dashboard
    spec:
      containers:
      - image: robco/robot-dashboard:latest
        imagePullPolicy: IfNotPresent
        name: robot-dashboard
        resources:
          limits:
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 64Mi
        ports:
        - containerPort: 80
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: robot-dashboard
  namespace: robco
spec:
  selector:
    app: robot-dashboard
  type: NodePort
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: robot-dashboard
  namespace: robco
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: robot-dashboard.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: robot-dashboard
            port:
              number: 3000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-db
  namespace: robco
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db
  namespace: robco
spec:
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_DB
          value: robotdb
        - name: POSTGRES_USER
          value: robotuser
        - name: POSTGRES_PASSWORD
          value: password
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-db
      volumes:
      - name: postgres-db
        persistentVolumeClaim:
          claimName: postgres-db
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-db
  namespace: robco
spec:
  ports:
  - port: 5432
  selector:
    app: postgres-db
